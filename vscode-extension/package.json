{
  "name": "codeguard",
  "displayName": "CodeGuard ML/RL Auditor",
  "description": "Enterprise-grade static analysis for ML/RL Python code with AI-powered improvements, framework detection, custom rules, and intelligent fix suggestions.",
  "version": "0.2.0",
  "publisher": "codeguard-ai",
  "repository": {
    "type": "git",
    "url": "https://github.com/codeguard-ai/vscode-extension.git"
  },
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": ["Linters", "AI", "Machine Learning"],
  "activationEvents": [
    "onLanguage:python",
    "onCommand:codeguard.runAudit"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "codeguard.runAudit",
        "title": "CodeGuard: Run Audit",
        "icon": "$(search)"
      },
      {
        "command": "codeguard.clearDiagnostics",
        "title": "CodeGuard: Clear Diagnostics"
      },
      {
        "command": "codeguard.generateReport",
        "title": "CodeGuard: Generate Report"
      },
      {
        "command": "codeguard.setupProject",
        "title": "CodeGuard: Setup ML Project",
        "icon": "$(rocket)"
      },
      {
        "command": "codeguard.improveWithChatGPT",
        "title": "CodeGuard: Improve with AI",
        "icon": "$(sparkle)"
      },
      {
        "command": "codeguard.showFixMenu",
        "title": "CodeGuard: Apply Individual Fixes",
        "icon": "$(list-selection)"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "resourceExtname == .py",
          "command": "codeguard.runAudit",
          "group": "navigation"
        },
        {
          "when": "resourceExtname == .py",
          "command": "codeguard.improveWithChatGPT",
          "group": "navigation"
        },
        {
          "when": "resourceExtname == .py",
          "command": "codeguard.showFixMenu",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "CodeGuard Configuration",
      "properties": {
        "codeguard.apiKey": {
          "type": "string",
          "description": "Your CodeGuard API key for secure access.",
          "default": ""
        },
        "codeguard.serverUrl": {
          "type": "string",
          "default": "https://codeguard.replit.app",
          "description": "The base URL of your CodeGuard backend."
        },
        "codeguard.auditOnSave": {
          "type": "boolean",
          "default": true,
          "description": "Automatically run audit on file save."
        },
        "codeguard.ignoreRules": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "List of rule IDs to ignore during analysis."
        },
        "codeguard.analysisLevel": {
          "type": "string",
          "enum": ["basic", "standard", "strict"],
          "default": "standard",
          "description": "Analysis strictness level."
        },
        "codeguard.aiProvider": {
          "type": "string",
          "enum": ["openai", "gemini", "claude"],
          "description": "AI provider for code improvements and fixes.",
          "default": "openai"
        },
        "codeguard.openaiApiKey": {
          "type": "string",
          "description": "Your OpenAI API key for ChatGPT integration.",
          "default": ""
        },
        "codeguard.geminiApiKey": {
          "type": "string",
          "description": "Your Google Gemini API key for AI improvements.",
          "default": ""
        },
        "codeguard.claudeApiKey": {
          "type": "string",
          "description": "Your Anthropic Claude API key for AI assistance.",
          "default": ""
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "package": "vsce package"
  },
  "devDependencies": {
    "@types/vscode": "^1.80.0",
    "@types/node": "16.x",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "eslint": "^8.28.0",
    "typescript": "^4.9.4",
    "@vscode/test-electron": "^2.2.0",
    "vsce": "^2.15.0"
  },
  "dependencies": {
    "axios": "^1.6.0",
    "fs-extra": "^11.1.1"
  }
}